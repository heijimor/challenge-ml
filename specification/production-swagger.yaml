openapi: 3.0.3
info:
  title: Swagger Tech Challenge - OpenAPI 3.0
  description: |-
    Service which consumes embrapa data by web scraping and handle it to our system. 
    `Edit > Load Viticulture OAS 2.0` menu option!_

    Some useful links:
    - [Embrapa](http://vitibrasil.cnpuv.embrapa.br/)
  contact:
    email: apiteam@swagger.io
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: production
    description: resouces of embrapa Viticulture production
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /production:
    get:
      tags:
        - production
      summary: Returns Viticulture production registries
      description: Returns a listing of Viticulture production registries
      operationId: getProduction
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []

    post:
      tags:
        - production
      summary: Add a new registry to store
      description: Add a new registry to store
      operationId: addProduction
      requestBody:
        description: Create a new registry in the store of Viticulture
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
          application/xml:
            schema:
              $ref: "#/components/schemas/Product"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
            application/xml:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - auth:
            - write:production
            - read:production

    put:
      tags:
        - production
      summary: Update an register on production resource
      description: Update an production resource by Id
      operationId: updateProduction
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
            application/xml:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "422":
          description: Validation exception
      security:
        - auth:
            - write:pets
            - read:pets
  /production/{productionId}:
    get:
      tags:
        - production
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found

    delete:
      tags:
        - production
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        quantity:
          type: integer
          format: int32
          example: 7

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: "##default"

  securitySchemes:
    auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
